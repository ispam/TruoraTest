apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.truoratest"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            shrinkResources true
        }
        debug {
            ext.alwaysUpdateBuildId = false
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            shrinkResources false
        }
    }
    androidExtensions {
        experimental = true
    }
}

dependencies {
    def dagger = '2.16'
    def rxJava = '2.1.16'
    def rxAndroid = '2.1.0'
    def retrofit = '2.4.0'
    def okHttp = '3.11.0'
    def assertJ = '3.11.1'
    def mockK = '1.9'
    def jUnit5 = '5.3.1'
    def lottie = '3.0.0'
    def rxRelay = '2.1.0'
    def room = "2.1.0-beta01"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    // Unit Tests
    testImplementation "org.junit.jupiter:junit-jupiter-api:$jUnit5"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jUnit5"
    // (Optional) If you need "Parameterized Tests"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$jUnit5"
    // AssertJ:
    testImplementation "org.assertj:assertj-core:$assertJ"
    // MockK:
    testImplementation "io.mockk:mockk:$mockK"

    // Dependency Injection
    implementation "com.google.dagger:dagger:$dagger"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger"
    kapt "com.google.dagger:dagger-compiler:$dagger"
    implementation "com.google.dagger:dagger-android:$dagger"
    implementation "com.google.dagger:dagger-android-support:$dagger"
    kapt "com.google.dagger:dagger-android-processor:$dagger"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:$rxJava"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroid"
    implementation "com.jakewharton.rxrelay2:rxrelay:$rxRelay"

    //Rest API Calls + gson
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"
    implementation "com.squareup.okhttp3:okhttp:$okHttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttp"

    // Lottie
    implementation "com.airbnb.android:lottie:$lottie"

    // Room
    implementation "androidx.room:room-runtime:$room"
    kapt "androidx.room:room-compiler:$room"
    implementation "androidx.room:room-rxjava2:$room"
    implementation "androidx.room:room-guava:$room"
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
}
